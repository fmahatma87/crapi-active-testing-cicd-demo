# Licensed under the Apache License, Version 2.0 (the “License”);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an “AS IS” BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

services:
  crapi-identity:
    restart: always
    container_name: crapi-identity
    image: nnws/crapi-identity:${VERSION:-production}
    #ports:
    #  - "127.0.0.1:8080:8080"
    environment:
      - ENABLE_SHELL_INJECTION=false
      - ENABLE_LOG4J=false
      - DB_NAME=crapi
      - DB_USER=admin
      - DB_PASSWORD=crapisecretpassword
      - DB_HOST=postgresdb
      - DB_PORT=5432
      - SERVER_PORT=${IDENTITY_SERVER_PORT:-8080}
      - BLOCK_SHELL_INJECTION=false
      - JWT_SECRET=crapi
      - MAILHOG_HOST=mailhog
      - MAILHOG_PORT=1025
      - MAILHOG_DOMAIN=example.com
      - SMTP_HOST=smtp.example.com
      - SMTP_PORT=587
      - SMTP_EMAIL=user@example.com
      - SMTP_PASS=xxxxxxxxxxxxxx
      - SMTP_FROM=no-reply@example.com
      - SMTP_AUTH=true
      - SMTP_STARTTLS=true
    depends_on:
      postgresdb:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    healthcheck:
      test: curl 0.0.0.0:${IDENTITY_SERVER_PORT:-8080}/identity/health_check
      interval: 15s
      timeout: 15s
      retries: 15

  crapi-community:
    restart: always
    container_name: crapi-community
    image: nnws/crapi-community:${VERSION:-production}
    environment:
      - DB_NAME=crapi
      - DB_USER=admin
      - DB_PASSWORD=crapisecretpassword
      - DB_HOST=postgresdb
      - DB_PORT=5432
      - SERVER_PORT=${COMMUNITY_SERVER_PORT:-8087}
      - MONGO_DB_HOST=mongodb
      - MONGO_DB_PORT=27017
      - MONGO_DB_USER=admin
      - MONGO_DB_PASSWORD=crapisecretpassword
      - MONGO_DB_NAME=crapi
      - JWT_SECRET=crapi
    depends_on:
      postgresdb:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      crapi-identity:
        condition: service_healthy
    healthcheck:
      test: curl 0.0.0.0:${COMMUNITY_SERVER_PORT:-8087}/community/home
      interval: 15s
      timeout: 15s
      retries: 15

  crapi-workshop:
    restart: always
    container_name: crapi-workshop
    image: nnws/crapi-workshop:${VERSION:-production}
    environment:
      - IDENTITY_SERVICE=crapi-identity:${IDENTITY_SERVER_PORT:-8080}
      - DB_NAME=crapi
      - DB_USER=admin
      - DB_PASSWORD=crapisecretpassword
      - DB_HOST=postgresdb
      - DB_PORT=5432
      - SERVER_PORT=${WORKSHOP_SERVER_PORT:-8000}
      - MONGO_DB_HOST=mongodb
      - MONGO_DB_PORT=27017
      - MONGO_DB_USER=admin
      - MONGO_DB_PASSWORD=crapisecretpassword
      - MONGO_DB_NAME=crapi
      - JWT_SECRET=crapi
      - SECRET_KEY=crapi
    depends_on:
      postgresdb:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      crapi-identity:
        condition: service_healthy
      crapi-community:
        condition: service_healthy
    healthcheck:
      test: curl 0.0.0.0:${WORKSHOP_SERVER_PORT:-8000}/workshop/health_check/
      interval: 15s
      timeout: 15s
      retries: 15

  crapi-web:
    restart: always
    container_name: crapi-web
    image: nnws/crapi-web:${VERSION:-production}
    ports:
      - '80:80'
    environment:
      - COMMUNITY_SERVICE=crapi-community:${COMMUNITY_SERVER_PORT:-8087}
      - IDENTITY_SERVICE=crapi-identity:${IDENTITY_SERVER_PORT:-8080}
      - WORKSHOP_SERVICE=crapi-workshop:${WORKSHOP_SERVER_PORT:-8000}
    depends_on:
      crapi-community:
        condition: service_healthy
      crapi-identity:
        condition: service_healthy
      crapi-workshop:
        condition: service_healthy
    healthcheck:
      test: curl 0.0.0.0:80/web/health
      interval: 15s
      timeout: 15s
      retries: 15

  postgresdb:
    restart: always
    container_name: postgresdb
    image: 'postgres:14'
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: crapisecretpassword
      POSTGRES_DB: crapi
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready']
      interval: 15s
      timeout: 15s
      retries: 15
    volumes:
      - postgresql-data:/var/lib/postgresql/data/

  mongodb:
    restart: always
    container_name: mongodb
    image: 'mongo:4.4'
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: crapisecretpassword
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongodb:27017/test --quiet
      interval: 15s
      timeout: 15s
      retries: 15
      start_period: 20s
    volumes:
      - mongodb-data:/data/db

  mailhog:
    restart: always
    user: root
    container_name: mailhog
    image: nnws/mailhog:${VERSION:-production}
    environment:
      MH_MONGO_URI: admin:crapisecretpassword@mongodb:27017
      MH_STORAGE: mongodb
    ports:
      #  - "127.0.0.1:1025:1025" # smtp server
      - '8025:8025' # Mail ui
    healthcheck:
      test: ['CMD', 'nc', '-z', 'localhost', '8025']
      interval: 15s
      timeout: 15s
      retries: 15

volumes:
  mongodb-data:
  postgresql-data:
